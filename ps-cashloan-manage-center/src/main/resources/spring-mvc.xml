<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.adpanshi.cashloan.manage.controller" />
    <!--<bean id ="msgConsumer" class="com.adpanshi.cashloan.manage.cl.pojo.rocketmq.consumer.MsgConsumer" init-method="init"-->
          <!--destroy-method="destroy" scope="singleton">-->
        <!--<property name="groupName" value="MsgConsumerGroup" />-->
        <!--<property name="nameServer" value="127.0.0.1:9876" />-->
        <!--<property name="topics" value="Sms" />-->
    <!--</bean>-->
    <mvc:annotation-driven>
        <!-- @ResponseBody 使用fastjson转换 -->
        <mvc:message-converters>
            <bean
                    class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json; charset=UTF-8</value>
                        <value>application/x-www-form-urlencoded; charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <array>
                        <value>WriteDateUseDateFormat</value>
                    </array>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <!-- http 400,404,500-->
    <bean id="defaultViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:order="1">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/"/><!-- 后台platform 商家后台store 静态前台res -->
        <property name="suffix" value=".html"/>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值，默认为10K
        <property name="maxInMemorySize" value="40960" /> -->
    </bean>

    <!-- 引入spring -->
    <import resource="classpath:/spring-interceptors.xml" />


    <!--将日志类注入到bean中。-->
    <bean id="manageAspect" class="com.adpanshi.cashloan.manage.aop.LogAspect"></bean>
    <aop:config>
        <!--调用日志类-->
        <aop:aspect id="ManageAspect" ref="manageAspect">
            <!--配置在controller包下所有的类在调用之前都会被拦截-->
            <aop:pointcut id="manageLog" expression="execution(* com.adpanshi.cashloan.manage.controller..*.*(..))"/>
            <!-- 方法后触发 --><aop:after-returning pointcut-ref="manageLog" method="after" returning="rtv"/>
        </aop:aspect>
    </aop:config>

</beans>