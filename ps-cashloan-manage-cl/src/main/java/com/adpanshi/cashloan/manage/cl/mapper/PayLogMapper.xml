<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adpanshi.cashloan.manage.cl.mapper.PayLogMapper">
  <resultMap id="BaseResultMap" type="com.adpanshi.cashloan.manage.cl.model.PayLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="borrow_main_id" jdbcType="BIGINT" property="borrowMainId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="confirm_code" jdbcType="VARCHAR" property="confirmCode" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="scenes" jdbcType="VARCHAR" property="scenes" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="pay_req_time" jdbcType="TIMESTAMP" property="payReqTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, order_no, user_id, borrow_main_id, amount, card_no, bank, confirm_code, source, 
    type, scenes, state, remark, pay_req_time, update_time, create_time
  </sql>
  <select id="selectByExample" parameterType="com.adpanshi.cashloan.manage.cl.model.PayLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `cl_pay_log`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `cl_pay_log`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `cl_pay_log`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.adpanshi.cashloan.manage.cl.model.PayLogExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `cl_pay_log`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.adpanshi.cashloan.manage.cl.model.PayLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `cl_pay_log` (id, order_no, user_id, 
      borrow_main_id, amount, card_no, 
      bank, confirm_code, source, 
      type, scenes, state, 
      remark, pay_req_time, update_time, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{borrowMainId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{cardNo,jdbcType=VARCHAR}, 
      #{bank,jdbcType=VARCHAR}, #{confirmCode,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{scenes,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{payReqTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.adpanshi.cashloan.manage.cl.model.PayLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `cl_pay_log`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="borrowMainId != null">
        borrow_main_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="confirmCode != null">
        confirm_code,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="scenes != null">
        scenes,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="payReqTime != null">
        pay_req_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowMainId != null">
        #{borrowMainId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="confirmCode != null">
        #{confirmCode,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="scenes != null">
        #{scenes,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payReqTime != null">
        #{payReqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <!-- 分页查询 -->
  <select id="page" resultType="com.adpanshi.cashloan.manage.cl.model.expand.PayLogModel" parameterType="java.util.HashMap">
    select
    payLog.id,payLog.order_no,borrow.order_no as borrowOrderNo,borrow.state as borrowState,payLog.borrow_main_id,payLog.amount,
    payLog.card_no,payLog.bank,payLog.source,payLog.type,payLog.scenes,payLog.state,payLog.remark,payLog.pay_req_time,
    payLog.update_time,payLog.create_time,borrow.create_time as loanTime,user.login_name,baseInfo.real_name,baseInfo.phone
    from
    cl_pay_log payLog
    left join cl_borrow_main borrow on payLog.borrow_main_id  = borrow.id
    left join cl_user user on payLog.user_id = user.id
    left join cl_user_base_info baseInfo on payLog.user_id = baseInfo.user_id
    <trim prefix="where" prefixOverrides="and|or">
      <if test="isVerify != null and isVerify">
        borrow.`state` in ('20','26')
      </if>
      <if test="realName != null and realName !=''">
        and baseInfo.real_name like concat("%",#{realName,jdbcType=VARCHAR},"%")
      </if>
      <if test="phone !=null and phone !=''">
        and baseInfo.phone like  concat("%",#{phone,jdbcType=VARCHAR},"%")
      </if>
      <if test="type !=null and type.size > 0">
        and payLog.type in
        <foreach item="item" index="index" collection="type" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="scenes !=null and scenes !='' ">
        and payLog.scenes = #{scenes,jdbcType=VARCHAR}
      </if>
      <if test="state !=null and state !=''">
        and payLog.state = #{state,jdbcType=VARCHAR}
      </if>
      <if test="startTime  != null">
        <![CDATA[
                     AND payLog.create_time >= CONCAT(#{startTime},' 00:00:00')
                 ]]>
      </if>
      <if test="endTime  != null">
        <![CDATA[
                     AND payLog.create_time <= CONCAT(#{endTime},' 23:59:59')
                 ]]>
      </if>
    </trim>
    order by payLog.id desc
    <if test="totalCount !='' and totalCount !=null">
      limit #{totalCount,jdbcType = BIGINT}
    </if>
  </select>
    <select id="countByExample" parameterType="com.adpanshi.cashloan.manage.cl.model.PayLogExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from `cl_pay_log`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <!--  根据orderNo、borrowId查找最近的一条支付记录 -->
  <select id="findPayLogByLastOrderNoWithBorrowId" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" />
    from cl_pay_log
    WHERE 1=1  AND order_no= #{orderNo,jdbcType=VARCHAR}
    <if test="borrowMainId != null and borrowMainId != ''">
      AND borrow_main_id = #{borrowMainId}
    </if>
    order by create_time desc limit 1
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `cl_pay_log`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.borrowMainId != null">
        borrow_main_id = #{record.borrowMainId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null">
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.confirmCode != null">
        confirm_code = #{record.confirmCode,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.scenes != null">
        scenes = #{record.scenes,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.payReqTime != null">
        pay_req_time = #{record.payReqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `cl_pay_log`
    set id = #{record.id,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      borrow_main_id = #{record.borrowMainId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      confirm_code = #{record.confirmCode,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      scenes = #{record.scenes,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      pay_req_time = #{record.payReqTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.adpanshi.cashloan.manage.cl.model.PayLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `cl_pay_log`
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowMainId != null">
        borrow_main_id = #{borrowMainId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="confirmCode != null">
        confirm_code = #{confirmCode,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="scenes != null">
        scenes = #{scenes,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payReqTime != null">
        pay_req_time = #{payReqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.adpanshi.cashloan.manage.cl.model.PayLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `cl_pay_log`
    set order_no = #{orderNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      borrow_main_id = #{borrowMainId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      card_no = #{cardNo,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      confirm_code = #{confirmCode,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      scenes = #{scenes,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      pay_req_time = #{payReqTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>